TRUNC(3)                                        Linux Programmer's Manual                                       TRUNC(3)

NAME
       trunc, truncf, truncl - round to integer, toward zero

SYNOPSIS
       #include <math.h>

       double trunc(double x);
       float truncf(float x);
       long double truncl(long double x);

       Link with -lm.

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       trunc(), truncf(), truncl():
           _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L

DESCRIPTION
       These functions round x to the nearest integer value that is not larger in magnitude than x.

RETURN VALUE
       These functions return the rounded integer value, in floating format.

       If x is integral, infinite, or NaN, x itself is returned.

ERRORS
       No errors occur.

VERSIONS
       These functions first appeared in glibc in version 2.1.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌────────────────────────────┬───────────────┬─────────┐
       │Interface                   │ Attribute     │ Value   │
       ├────────────────────────────┼───────────────┼─────────┤
       │trunc(), truncf(), truncl() │ Thread safety │ MT-Safe │
       └────────────────────────────┴───────────────┴─────────┘
CONFORMING TO
       C99, POSIX.1-2001, POSIX.1-2008.

NOTES
       The  integral  value  returned by these functions may be too large to store in an integer type (int, long, etc.).
       To avoid an overflow, which will produce undefined results, an application should perform a range  check  on  the
       returned value before assigning it to an integer type.

SEE ALSO
       ceil(3), floor(3), lrint(3), nearbyint(3), rint(3), round(3)

COLOPHON
       This  page  is  part  of  release 5.05 of the Linux man-pages project.  A description of the project, information
       about reporting bugs, and the latest version of this page, can be found at https://www.kernel.org/doc/man-pages/.

                                                       2019-03-06                                               TRUNC(3)
