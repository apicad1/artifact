
>>>>>>>>>>>>>>>>>>>>
- Function: int execv (const char *filename, char *const argv[])
Preliminary: | MT-Safe  | AS-Safe  | AC-Safe  | See POSIX Safety Concepts. 
The execv function executes the file named by filename as a new process image. 
The argv argument is an array of null-terminated strings that is used to provide a value for the argv argument to the main function of the program to be executed.  The last element of this array must be a null pointer.  By convention, the first element of this array is the file name of the program sans directory names.  See Program Arguments, for full details on how programs can access these arguments. 
The environment for the new process image is taken from the environ variable of the current process image; see Environment Variables, for information about environments. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int execl (const char *filename, const char *arg0, …)
Preliminary: | MT-Safe  | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This is similar to execv, but the argv strings are specified individually instead of as an array.  A null pointer must be passed as the last such argument. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int execve (const char *filename, char *const argv[], char *const env[])
Preliminary: | MT-Safe  | AS-Safe  | AC-Safe  | See POSIX Safety Concepts. 
This is similar to execv, but permits you to specify the environment for the new program explicitly as the env argument.  This should be an array of strings in the same format as for the environ variable; see Environment Access. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int fexecve (int fd,  char *const argv[], char *const env[])
Preliminary: | MT-Safe  | AS-Safe  | AC-Safe  | See POSIX Safety Concepts. 
This is similar to execve, but instead of identifying the program executable by its pathname, the file descriptor fd is used.  The descriptor must have been opened with the O_RDONLY flag or (on Linux) the O_PATH flag. 
On Linux, fexecve can fail with an error of ENOSYS if /proc has not been mounted and the kernel lacks support for the underlying execveat system call. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int execle (const char *filename, const char *arg0, …, char *const env[])
Preliminary: | MT-Safe  | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This is similar to execl, but permits you to specify the environment for the new program explicitly.  The environment argument is passed following the null pointer that marks the last argv argument, and should be an array of strings in the same format as for the environ variable. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int execvp (const char *filename, char *const argv[])
Preliminary: | MT-Safe env | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
The execvp function is similar to execv, except that it searches the directories listed in the PATH environment variable (see Standard Environment) to find the full file name of a file from filename if filename does not contain a slash. 
This function is useful for executing system utility programs, because it looks for them in the places that the user has chosen.  Shells use it to run the commands that users type. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int execlp (const char *filename, const char *arg0, …)
Preliminary: | MT-Safe env | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This function is like execl, except that it performs the same file name searching as the execvp function. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- E2BIG
The combined size of the new program’s argument list and environment list is larger than ARG_MAX bytes.  GNU/Hurd systems have no specific limit on the argument list size, so this error code cannot result, but you may get ENOMEM instead if the arguments are too big for available memory. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- ENOEXEC
The specified file can’t be executed because it isn’t in the right format. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- ENOMEM
Executing the specified file requires more storage than is available. 
