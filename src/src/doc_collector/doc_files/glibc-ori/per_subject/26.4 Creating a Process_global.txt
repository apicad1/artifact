The fork function is the primitive for creating a process. It is declared in the header file unistd.h.  
The specific attributes of the child process that differ from the parent process are: 
  The child process has its own unique process ID.   The parent process ID of the child process is the process ID of its parent process.   The child process gets its own copies of the parent process’s open file descriptors.  Subsequently changing attributes of the file descriptors in the parent process won’t affect the file descriptors in the child, and vice versa.  See Control Operations.  However, the file position associated with each descriptor is shared by both processes; see File Position.   The elapsed processor times for the child process are set to zero; see Processor Time.   The child doesn’t inherit file locks set by the parent process. See Control Operations.   The child doesn’t inherit alarms set by the parent process. See Setting an Alarm.   The set of pending signals (see Delivery of Signal) for the child process is cleared.  (The child process inherits its mask of blocked signals and signal actions from the parent process.) 
