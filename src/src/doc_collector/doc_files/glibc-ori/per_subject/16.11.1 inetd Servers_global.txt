Writing a server program to be run by inetd is very simple.  Each time someone requests a connection to the appropriate port, a new server process starts.  The connection already exists at this time; the socket is available as the standard input descriptor and as the standard output descriptor (descriptors 0 and 1) in the server process.  Thus the server program can begin reading and writing data right away.  Often the program needs only the ordinary I/O facilities; in fact, a general-purpose filter program that knows nothing about sockets can work as a byte stream server run by inetd. 
You can also use inetd for servers that use connectionless communication styles.  For these servers, inetd does not try to accept a connection since no connection is possible.  It just starts the server program, which can read the incoming datagram packet from descriptor 0.  The server program can handle one request and then exit, or you can choose to write it to keep reading more requests until no more arrive, and then exit.  You must specify which of these two techniques the server uses when you configure inetd. 
