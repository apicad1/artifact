
>>>>>>>>>>>>>>>>>>>>
- Function: int vprintf (const char *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe corrupt heap | AC-Unsafe mem lock corrupt | See POSIX Safety Concepts. 
This function is similar to printf except that, instead of taking a variable number of arguments directly, it takes an argument list pointer ap. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vwprintf (const wchar_t *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe corrupt heap | AC-Unsafe mem lock corrupt | See POSIX Safety Concepts. 
This function is similar to wprintf except that, instead of taking a variable number of arguments directly, it takes an argument list pointer ap. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vfprintf (FILE *stream, const char *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe corrupt heap | AC-Unsafe mem lock corrupt | See POSIX Safety Concepts. 
This is the equivalent of fprintf with the variable argument list specified directly as for vprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vfwprintf (FILE *stream, const wchar_t *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe corrupt heap | AC-Unsafe mem lock corrupt | See POSIX Safety Concepts. 
This is the equivalent of fwprintf with the variable argument list specified directly as for vwprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vsprintf (char *s, const char *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This is the equivalent of sprintf with the variable argument list specified directly as for vprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vswprintf (wchar_t *ws, size_t size, const wchar_t *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This is the equivalent of swprintf with the variable argument list specified directly as for vwprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vsnprintf (char *s, size_t size, const char *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
This is the equivalent of snprintf with the variable argument list specified directly as for vprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int vasprintf (char **ptr, const char *template, va_list ap)
Preliminary: | MT-Safe locale | AS-Unsafe heap | AC-Unsafe mem | See POSIX Safety Concepts. 
The vasprintf function is the equivalent of asprintf with the variable argument list specified directly as for vprintf. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int obstack_vprintf (struct obstack *obstack, const char *template, va_list ap)
Preliminary: | MT-Safe race:obstack locale | AS-Unsafe corrupt heap | AC-Unsafe corrupt mem | See POSIX Safety Concepts. 
The obstack_vprintf function is the equivalent of obstack_printf with the variable argument list specified directly as for vprintf. 
