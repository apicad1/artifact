Amendment 1 to ISO C90 defines functions to classify wide characters.  Although the original ISO C90 standard already defined the type wchar_t, no functions operating on them were defined. 
The general design of the classification functions for wide characters is more general.  It allows extensions to the set of available classifications, beyond those which are always available.  The POSIX standard specifies how extensions can be made, and this is already implemented in the GNU C Library implementation of the localedef program. 
The character class functions are normally implemented with bitsets, with a bitset per character.  For a given character, the appropriate bitset is read from a table and a test is performed as to whether a certain bit is set.  Which bit is tested for is determined by the class. 
For the wide character classification functions this is made visible. There is a type classification type defined, a function to retrieve this value for a given class, and a function to test whether a given character is in this class, using the classification value.  On top of this the normal character classification functions as used for char objects can be defined. 
To test the membership of a character to one of the non-standard classes the ISO C standard defines a completely new function. 
To make it easier to use the commonly-used classification functions, they are defined in the C library.  There is no need to use wctype if the property string is one of the known character classes.  In some situations it is desirable to construct the property strings, and then it is important that wctype can also handle the standard classes. 
The GNU C Library also provides a function which is not defined in the ISO C standard but which is available as a version for single byte characters as well. 
