The functions mentioned so far in this chapter are for searching in a sorted or unsorted array.  There are other methods to organize information which later should be searched.  The costs of insert, delete and search differ.  One possible implementation is using hashing tables. The following functions are declared in the header file search.h. 
Entries of the hashing table and keys for the search are defined using this type: 
As mentioned before, the hashing table used by the functions described so far is global and there can be at any time at most one hashing table in the program.  A solution is to use the following functions which are a GNU extension.  All have in common that they operate on a hashing table which is described by the content of an object of the type struct hsearch_data.  This type should be treated as opaque, none of its members should be changed directly. 
