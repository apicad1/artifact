The lookup functions for netgroups are a bit different than all other system database handling functions.  Since a single netgroup can contain many entries a two-step process is needed.  First a single netgroup is selected and then one can iterate over all entries in this netgroup. These functions are declared in netdb.h. 
It is important to remember that there is only one single state for iterating the netgroups.  Even if the programmer uses the getnetgrent_r function the result is not really reentrant since always only one single netgroup at a time can be processed.  If the program needs to process more than one netgroup simultaneously she must protect this by using external locking.  This problem was introduced in the original netgroups implementation in SunOS and since we must stay compatible it is not possible to change this. 
Some other functions also use the netgroups state.  Currently these are the innetgr function and parts of the implementation of the compat service part of the NSS implementation. 
