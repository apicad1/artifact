Suppose you need to store an integer value which can range from zero to one million.  Which is the smallest type you can use?  There is no general rule; it depends on the C compiler and target machine.  You can use the ‘MIN’ and ‘MAX’ macros in limits.h to determine which type will work. 
Each signed integer type has a pair of macros which give the smallest and largest values that it can hold.  Each unsigned integer type has one such macro, for the maximum value; the minimum value is, of course, zero. 
The values of these macros are all integer constant expressions.  The ‘MAX’ and ‘MIN’ macros for char and short int types have values of type int.  The ‘MAX’ and ‘MIN’ macros for the other types have values of the same type described by the macro—thus, ULONG_MAX has type unsigned long int. 
The header file limits.h also defines some additional constants that parameterize various operating system and file system limits.  These constants are described in System Configuration. 
