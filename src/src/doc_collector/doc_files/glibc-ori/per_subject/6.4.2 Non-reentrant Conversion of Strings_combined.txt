For convenience the ISO C90 standard also defines functions to convert entire strings instead of single characters.  These functions suffer from the same problems as their reentrant counterparts from Amendment 1 to ISO C90; see Converting Strings. 

>>>>>>>>>>>>>>>>>>>>
- Function: size_t mbstowcs (wchar_t *wstring, const char *string, size_t size)
Preliminary: | MT-Safe  | AS-Unsafe corrupt heap lock dlopen | AC-Unsafe corrupt lock mem fd | See POSIX Safety Concepts. 
The mbstowcs (“multibyte string to wide character string”) function converts the null-terminated string of multibyte characters string to an array of wide character codes, storing not more than size wide characters into the array beginning at wstring. The terminating null character counts towards the size, so if size is less than the actual number of wide characters resulting from string, no terminating null character is stored. 
The conversion of characters from string begins in the initial shift state. 
If an invalid multibyte character sequence is found, the mbstowcs function returns a value of -1.  Otherwise, it returns the number of wide characters stored in the array wstring.  This number does not include the terminating null character, which is present if the number is less than size. 
Here is an example showing how to convert a string of multibyte characters, allocating enough space for the result. 

EXAMPLE_BEGIN
wchar_t *
mbstowcs_alloc (const char *string)
{
  size_t size = strlen (string) + 1;
  wchar_t *buf = xmalloc (size * sizeof (wchar_t));

  size = mbstowcs (buf, string, size);
  if (size == (size_t) -1)
    return NULL;
  buf = xreallocarray (buf, size + 1, sizeof *buf);
  return buf;
}
EXAMPLE_END

If wstring is a null pointer then no output is written and the conversion proceeds as above, and the result is returned.  In practice such behaviour is useful for calculating the exact number of wide characters required to convert string.  This behaviour of accepting a null pointer for wstring is an XPG4.2 extension that is not specified in ISO C and is optional in POSIX. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: size_t wcstombs (char *string, const wchar_t *wstring, size_t size)
Preliminary: | MT-Safe  | AS-Unsafe corrupt heap lock dlopen | AC-Unsafe corrupt lock mem fd | See POSIX Safety Concepts. 
The wcstombs (“wide character string to multibyte string”) function converts the null-terminated wide character array wstring into a string containing multibyte characters, storing not more than size bytes starting at string, followed by a terminating null character if there is room.  The conversion of characters begins in the initial shift state. 
The terminating null character counts towards the size, so if size is less than or equal to the number of bytes needed in wstring, no terminating null character is stored. 
If a code that does not correspond to a valid multibyte character is found, the wcstombs function returns a value of -1. Otherwise, the return value is the number of bytes stored in the array string.  This number does not include the terminating null character, which is present if the number is less than size. 
