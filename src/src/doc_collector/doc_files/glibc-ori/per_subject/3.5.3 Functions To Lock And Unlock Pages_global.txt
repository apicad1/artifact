The symbols in this section are declared in sys/mman.h.  These functions are defined by POSIX.1b, but their availability depends on your kernel.  If your kernel doesn’t allow these functions, they exist but always fail.  They are available with a Linux kernel. 
Portability Note: POSIX.1b requires that when the mlock and munlock functions are available, the file unistd.h define the macro _POSIX_MEMLOCK_RANGE and the file limits.h define the macro PAGESIZE to be the size of a memory page in bytes.  It requires that when the mlockall and munlockall functions are available, the unistd.h file define the macro _POSIX_MEMLOCK.  The GNU C Library conforms to this requirement. 
You can lock all a process’ memory with mlockall.  You unlock memory with munlock or munlockall. 
To avoid all page faults in a C program, you have to use mlockall, because some of the memory a program uses is hidden from the C code, e.g. the stack and automatic variables, and you wouldn’t know what address to tell mlock. 
