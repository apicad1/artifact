The GNU C Library provides several functions for getting the current calendar time, with different levels of resolution. 
Some applications need more precise timekeeping than is possible with a time_t alone.  Some applications also need more control over what is meant by “the current time.”  For these applications, POSIX provides a function clock_gettime that can retrieve the time with up to nanosecond precision, from a variety of different clocks. Clocks can be system-wide, measuring time the same for all processes; or they can be per-process or per-thread, measuring CPU time consumed by a particular process, or some other similar resource.  Each clock has its own resolution and epoch.  You can find the resolution of a clock with the function clock_getres.  There is no function to get the epoch for a clock; either it is fixed and documented, or the clock is not meant to be used to measure absolute times. 
All systems that support this family of functions will define at least this clock constant: 
A second clock constant which is not universal, but still very common, is for a clock measuring monotonic time.  Monotonic time is useful for measuring elapsed times, because it guarantees that those measurements are not affected by changes to the system clock. 
Systems may support more than just these two clocks. 
clock_gettime reports the time scaled to seconds and nanoseconds, but the actual resolution of each clock may not be as fine as one nanosecond, and may not be the same for all clocks.  POSIX also provides a function for finding out the actual resolution of a clock: 
These functions, and the constants that identify particular clocks, are declared in time.h. 
Portability Note: On some systems, including systems that use older versions of the GNU C Library, programs that use clock_gettime or clock_setres must be linked with the -lrt library. This has not been necessary with the GNU C Library since version 2.17. 
The GNU C Library also provides an older, but still widely used, function for getting the current time with a resolution of microseconds.  This function is declared in sys/time.h. 
