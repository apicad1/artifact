
>>>>>>>>>>>>>>>>>>>>
- void *malloc (size_t size)
Allocate a block of size bytes.  See Basic Allocation. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void free (void *addr)
Free a block previously allocated by malloc.  See Freeing after Malloc. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *realloc (void *addr, size_t size)
Make a block previously allocated by malloc larger or smaller, possibly by copying it to a new location.  See Changing Block Size. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *reallocarray (void *ptr, size_t nmemb, size_t size)
Change the size of a block previously allocated by malloc to nmemb * size bytes as with realloc.  See Changing Block Size. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *calloc (size_t count, size_t eltsize)
Allocate a block of count * eltsize bytes using malloc, and set its contents to zero.  See Allocating Cleared Space. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *valloc (size_t size)
Allocate a block of size bytes, starting on a page boundary. See Aligned Memory Blocks. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *aligned_alloc (size_t size, size_t alignment)
Allocate a block of size bytes, starting on an address that is a multiple of alignment.  See Aligned Memory Blocks. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- int posix_memalign (void **memptr, size_t alignment, size_t size)
Allocate a block of size bytes, starting on an address that is a multiple of alignment.  See Aligned Memory Blocks. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- void *memalign (size_t size, size_t boundary)
Allocate a block of size bytes, starting on an address that is a multiple of boundary.  See Aligned Memory Blocks. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- int mallopt (int param, int value)
Adjust a tunable parameter.  See Malloc Tunable Parameters. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- int mcheck (void (*abortfn) (void))
Tell malloc to perform occasional consistency checks on dynamically allocated memory, and to call abortfn when an inconsistency is found.  See Heap Consistency Checking. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- struct mallinfo2 mallinfo2 (void)
Return information about the current dynamic memory usage. See Statistics of Malloc. 
