The file access mode allows a file descriptor to be used for reading, writing, both, or neither.  The access mode is determined when the file is opened, and never change. 
The portable file access modes O_RDONLY, O_WRONLY, and O_RDWR may not correspond to individual bits.  To determine the file access mode with fcntl, you must extract the access mode bits from the retrieved file status flags, using the O_ACCMODE mask. 
If a non-standard file access mode is used (such as O_PATH or O_EXEC), masking with O_ACCMODE may give incorrect results.  These non-standard access modes are identified by individual bits and have to be checked directly (without masking with O_ACCMODE first). 
On GNU/Hurd systems (but not on other systems), O_RDONLY and O_WRONLY are independent bits that can be bitwise-ORed together, and it is valid for either bit to be set or clear.  This means that O_RDWR is the same as O_RDONLY|O_WRONLY.  A file access mode of zero is permissible; it allows no operations that do input or output to the file, but does allow other operations such as fchmod.  On GNU/Hurd systems, since “read-only” or “write-only” is a misnomer, fcntl.h defines additional names for the file access modes. 
