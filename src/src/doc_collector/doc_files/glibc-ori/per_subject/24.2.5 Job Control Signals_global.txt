These signals are used to support job control.  If your system doesn’t support job control, then these macros are defined but the signals themselves can’t be raised or handled. 
You should generally leave these signals alone unless you really understand how job control works.  See Job Control. 
While a process is stopped, no more signals can be delivered to it until it is continued, except SIGKILL signals and (obviously) SIGCONT signals.  The signals are marked as pending, but not delivered until the process is continued.  The SIGKILL signal always causes termination of the process and can’t be blocked, handled or ignored.  You can ignore SIGCONT, but it always causes the process to be continued anyway if it is stopped.  Sending a SIGCONT signal to a process causes any pending stop signals for that process to be discarded.  Likewise, any pending SIGCONT signals for a process are discarded when it receives a stop signal. 
When a process in an orphaned process group (see Orphaned Process Groups) receives a SIGTSTP, SIGTTIN, or SIGTTOU signal and does not handle it, the process does not stop.  Stopping the process would probably not be very useful, since there is no shell program that will notice it stop and allow the user to continue it. What happens instead depends on the operating system you are using. Some systems may do nothing; others may deliver another signal instead, such as SIGKILL or SIGHUP.  On GNU/Hurd systems, the process dies with SIGKILL; this avoids the problem of many stopped, orphaned processes lying around the system. 
