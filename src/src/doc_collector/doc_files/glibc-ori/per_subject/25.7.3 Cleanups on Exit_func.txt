
>>>>>>>>>>>>>>>>>>>>
- Function: int atexit (void (*function) (void))
Preliminary: | MT-Safe  | AS-Unsafe heap lock | AC-Unsafe lock mem | See POSIX Safety Concepts. 
The atexit function registers the function function to be called at normal program termination.  The function is called with no arguments. 
The return value from atexit is zero on success and nonzero if the function cannot be registered. 
<<<<<<<<<<<<<<<<<<<<


>>>>>>>>>>>>>>>>>>>>
- Function: int on_exit (void (*function)(int status, void *arg), void *arg)
Preliminary: | MT-Safe  | AS-Unsafe heap lock | AC-Unsafe lock mem | See POSIX Safety Concepts. 
This function is a somewhat more powerful variant of atexit.  It accepts two arguments, a function function and an arbitrary pointer arg.  At normal program termination, the function is called with two arguments:  the status value passed to exit, and the arg. 
This function is included in the GNU C Library only for compatibility for SunOS, and may not be supported by other implementations. 
