The GNU C Library is compatible with the C standard adopted by the American National Standards Institute (ANSI): American National Standard X3.159-1989—“ANSI C” and later by the International Standardization Organization (ISO): ISO/IEC 9899:1990, “Programming languages—C”. We here refer to the standard as ISO C since this is the more general standard in respect of ratification. The header files and library facilities that make up the GNU C Library are a superset of those specified by the ISO C standard. 
If you are concerned about strict adherence to the ISO C standard, you should use the ‘-ansi’ option when you compile your programs with the GNU C compiler.  This tells the compiler to define only ISO standard features from the library header files, unless you explicitly ask for additional features.  See Feature Test Macros, for information on how to do this. 
Being able to restrict the library to include only ISO C features is important because ISO C puts limitations on what names can be defined by the library implementation, and the GNU extensions don’t fit these limitations.  See Reserved Names, for more information about these restrictions. 
This manual does not attempt to give you complete details on the differences between ISO C and older dialects.  It gives advice on how to write programs to work portably under multiple C dialects, but does not aim for completeness. 
