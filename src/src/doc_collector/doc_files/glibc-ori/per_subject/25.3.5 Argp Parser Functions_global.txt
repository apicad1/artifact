The function pointed to by the parser field in a struct argp (see Argp Parsers) defines what actions take place in response to each option or argument parsed.  It is also used as a hook, allowing a parser to perform tasks at certain other points during parsing. 
Argp parser functions have the following type signature: 

EXAMPLE_BEGIN
error_t parser (int key, char *arg, struct argp_state *state)
EXAMPLE_END

where the arguments are as follows: 
When parser is called, it should perform whatever action is appropriate for key, and return 0 for success, ARGP_ERR_UNKNOWN if the value of key is not handled by this parser function, or a unix error code if a real error occurred.  See Error Codes. 
A typical parser function uses a switch statement on key: 

EXAMPLE_BEGIN
error_t
parse_opt (int key, char *arg, struct argp_state *state)
{
  switch (key)
    {
    case option_key:
      action
      break;
    …
    default:
      return ARGP_ERR_UNKNOWN;
    }
  return 0;
}
EXAMPLE_END


TABLE_BEGIN
 • Keys    Special values for the key argument.

 • State    What the state argument refers to.

 • Functions    Functions to help during argp parsing.

TABLE_END

